/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.ensembl.genesearch.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Linkage_type extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Linkage_type\",\"namespace\":\"org.ensembl.genesearch.avro\",\"fields\":[{\"name\":\"evidence\",\"type\":\"string\"},{\"name\":\"source\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Source\",\"fields\":[{\"name\":\"primary_id\",\"type\":\"string\"},{\"name\":\"dbname\",\"type\":\"string\"},{\"name\":\"display_id\",\"type\":\"string\"}]}}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence evidence;
  @Deprecated public java.util.List<org.ensembl.genesearch.avro.Source> source;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Linkage_type() {}

  /**
   * All-args constructor.
   */
  public Linkage_type(java.lang.CharSequence evidence, java.util.List<org.ensembl.genesearch.avro.Source> source) {
    this.evidence = evidence;
    this.source = source;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return evidence;
    case 1: return source;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: evidence = (java.lang.CharSequence)value$; break;
    case 1: source = (java.util.List<org.ensembl.genesearch.avro.Source>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'evidence' field.
   */
  public java.lang.CharSequence getEvidence() {
    return evidence;
  }

  /**
   * Sets the value of the 'evidence' field.
   * @param value the value to set.
   */
  public void setEvidence(java.lang.CharSequence value) {
    this.evidence = value;
  }

  /**
   * Gets the value of the 'source' field.
   */
  public java.util.List<org.ensembl.genesearch.avro.Source> getSource() {
    return source;
  }

  /**
   * Sets the value of the 'source' field.
   * @param value the value to set.
   */
  public void setSource(java.util.List<org.ensembl.genesearch.avro.Source> value) {
    this.source = value;
  }

  /** Creates a new Linkage_type RecordBuilder */
  public static org.ensembl.genesearch.avro.Linkage_type.Builder newBuilder() {
    return new org.ensembl.genesearch.avro.Linkage_type.Builder();
  }
  
  /** Creates a new Linkage_type RecordBuilder by copying an existing Builder */
  public static org.ensembl.genesearch.avro.Linkage_type.Builder newBuilder(org.ensembl.genesearch.avro.Linkage_type.Builder other) {
    return new org.ensembl.genesearch.avro.Linkage_type.Builder(other);
  }
  
  /** Creates a new Linkage_type RecordBuilder by copying an existing Linkage_type instance */
  public static org.ensembl.genesearch.avro.Linkage_type.Builder newBuilder(org.ensembl.genesearch.avro.Linkage_type other) {
    return new org.ensembl.genesearch.avro.Linkage_type.Builder(other);
  }
  
  /**
   * RecordBuilder for Linkage_type instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Linkage_type>
    implements org.apache.avro.data.RecordBuilder<Linkage_type> {

    private java.lang.CharSequence evidence;
    private java.util.List<org.ensembl.genesearch.avro.Source> source;

    /** Creates a new Builder */
    private Builder() {
      super(org.ensembl.genesearch.avro.Linkage_type.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.ensembl.genesearch.avro.Linkage_type.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.evidence)) {
        this.evidence = data().deepCopy(fields()[0].schema(), other.evidence);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.source)) {
        this.source = data().deepCopy(fields()[1].schema(), other.source);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Linkage_type instance */
    private Builder(org.ensembl.genesearch.avro.Linkage_type other) {
            super(org.ensembl.genesearch.avro.Linkage_type.SCHEMA$);
      if (isValidValue(fields()[0], other.evidence)) {
        this.evidence = data().deepCopy(fields()[0].schema(), other.evidence);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.source)) {
        this.source = data().deepCopy(fields()[1].schema(), other.source);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'evidence' field */
    public java.lang.CharSequence getEvidence() {
      return evidence;
    }
    
    /** Sets the value of the 'evidence' field */
    public org.ensembl.genesearch.avro.Linkage_type.Builder setEvidence(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.evidence = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'evidence' field has been set */
    public boolean hasEvidence() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'evidence' field */
    public org.ensembl.genesearch.avro.Linkage_type.Builder clearEvidence() {
      evidence = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'source' field */
    public java.util.List<org.ensembl.genesearch.avro.Source> getSource() {
      return source;
    }
    
    /** Sets the value of the 'source' field */
    public org.ensembl.genesearch.avro.Linkage_type.Builder setSource(java.util.List<org.ensembl.genesearch.avro.Source> value) {
      validate(fields()[1], value);
      this.source = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'source' field has been set */
    public boolean hasSource() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'source' field */
    public org.ensembl.genesearch.avro.Linkage_type.Builder clearSource() {
      source = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public Linkage_type build() {
      try {
        Linkage_type record = new Linkage_type();
        record.evidence = fieldSetFlags()[0] ? this.evidence : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.source = fieldSetFlags()[1] ? this.source : (java.util.List<org.ensembl.genesearch.avro.Source>) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
