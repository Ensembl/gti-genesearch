/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.ensembl.genesearch.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Translation extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Translation\",\"namespace\":\"org.ensembl.genesearch.avro\",\"fields\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"coding_start\",\"type\":\"int\"},{\"name\":\"coding_end\",\"type\":\"int\"},{\"name\":\"xrefs\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Xref\",\"fields\":[{\"name\":\"display_id\",\"type\":\"string\"},{\"name\":\"linkage_types\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Linkage_type\",\"fields\":[{\"name\":\"evidence\",\"type\":\"string\"},{\"name\":\"source\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Source\",\"fields\":[{\"name\":\"primary_id\",\"type\":\"string\"},{\"name\":\"dbname\",\"type\":\"string\"},{\"name\":\"display_id\",\"type\":\"string\"}]}}}]}}},{\"name\":\"primary_id\",\"type\":\"string\"},{\"name\":\"dbname\",\"type\":\"string\"},{\"name\":\"associated_xrefs\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Associated_xref\",\"fields\":[{\"name\":\"experimental_evidence\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Experimental_evidence\",\"fields\":[{\"name\":\"primary_id\",\"type\":\"string\"},{\"name\":\"dbname\",\"type\":\"string\"},{\"name\":\"display_id\",\"type\":\"string\"},{\"name\":\"source\",\"type\":{\"type\":\"array\",\"items\":\"Source\"}},{\"name\":\"rank\",\"type\":\"int\"}]}}},{\"name\":\"host\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Host\",\"fields\":[{\"name\":\"dbname\",\"type\":\"string\"},{\"name\":\"primary_id\",\"type\":\"string\"},{\"name\":\"rank\",\"type\":\"int\"},{\"name\":\"source\",\"type\":{\"type\":\"array\",\"items\":\"Source\"}},{\"name\":\"display_id\",\"type\":\"string\"}]}}},{\"name\":\"phenotype\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Phenotype\",\"fields\":[{\"name\":\"primary_id\",\"type\":\"string\"},{\"name\":\"dbname\",\"type\":\"string\"},{\"name\":\"source\",\"type\":{\"type\":\"array\",\"items\":\"Source\"}},{\"name\":\"rank\",\"type\":\"int\"},{\"name\":\"display_id\",\"type\":\"string\"}]}}}]}}},{\"name\":\"parents\",\"type\":\"string\"}]}}},{\"name\":\"protein_features\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Protein_feature\",\"fields\":[{\"name\":\"start\",\"type\":\"int\"},{\"name\":\"end\",\"type\":\"int\"},{\"name\":\"dbname\",\"type\":\"string\"},{\"name\":\"interpro_ac\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"}]}}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence id;
  @Deprecated public int coding_start;
  @Deprecated public int coding_end;
  @Deprecated public java.util.List<org.ensembl.genesearch.avro.Xref> xrefs;
  @Deprecated public java.util.List<org.ensembl.genesearch.avro.Protein_feature> protein_features;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Translation() {}

  /**
   * All-args constructor.
   */
  public Translation(java.lang.CharSequence id, java.lang.Integer coding_start, java.lang.Integer coding_end, java.util.List<org.ensembl.genesearch.avro.Xref> xrefs, java.util.List<org.ensembl.genesearch.avro.Protein_feature> protein_features) {
    this.id = id;
    this.coding_start = coding_start;
    this.coding_end = coding_end;
    this.xrefs = xrefs;
    this.protein_features = protein_features;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return coding_start;
    case 2: return coding_end;
    case 3: return xrefs;
    case 4: return protein_features;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.CharSequence)value$; break;
    case 1: coding_start = (java.lang.Integer)value$; break;
    case 2: coding_end = (java.lang.Integer)value$; break;
    case 3: xrefs = (java.util.List<org.ensembl.genesearch.avro.Xref>)value$; break;
    case 4: protein_features = (java.util.List<org.ensembl.genesearch.avro.Protein_feature>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'coding_start' field.
   */
  public java.lang.Integer getCodingStart() {
    return coding_start;
  }

  /**
   * Sets the value of the 'coding_start' field.
   * @param value the value to set.
   */
  public void setCodingStart(java.lang.Integer value) {
    this.coding_start = value;
  }

  /**
   * Gets the value of the 'coding_end' field.
   */
  public java.lang.Integer getCodingEnd() {
    return coding_end;
  }

  /**
   * Sets the value of the 'coding_end' field.
   * @param value the value to set.
   */
  public void setCodingEnd(java.lang.Integer value) {
    this.coding_end = value;
  }

  /**
   * Gets the value of the 'xrefs' field.
   */
  public java.util.List<org.ensembl.genesearch.avro.Xref> getXrefs() {
    return xrefs;
  }

  /**
   * Sets the value of the 'xrefs' field.
   * @param value the value to set.
   */
  public void setXrefs(java.util.List<org.ensembl.genesearch.avro.Xref> value) {
    this.xrefs = value;
  }

  /**
   * Gets the value of the 'protein_features' field.
   */
  public java.util.List<org.ensembl.genesearch.avro.Protein_feature> getProteinFeatures() {
    return protein_features;
  }

  /**
   * Sets the value of the 'protein_features' field.
   * @param value the value to set.
   */
  public void setProteinFeatures(java.util.List<org.ensembl.genesearch.avro.Protein_feature> value) {
    this.protein_features = value;
  }

  /** Creates a new Translation RecordBuilder */
  public static org.ensembl.genesearch.avro.Translation.Builder newBuilder() {
    return new org.ensembl.genesearch.avro.Translation.Builder();
  }
  
  /** Creates a new Translation RecordBuilder by copying an existing Builder */
  public static org.ensembl.genesearch.avro.Translation.Builder newBuilder(org.ensembl.genesearch.avro.Translation.Builder other) {
    return new org.ensembl.genesearch.avro.Translation.Builder(other);
  }
  
  /** Creates a new Translation RecordBuilder by copying an existing Translation instance */
  public static org.ensembl.genesearch.avro.Translation.Builder newBuilder(org.ensembl.genesearch.avro.Translation other) {
    return new org.ensembl.genesearch.avro.Translation.Builder(other);
  }
  
  /**
   * RecordBuilder for Translation instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Translation>
    implements org.apache.avro.data.RecordBuilder<Translation> {

    private java.lang.CharSequence id;
    private int coding_start;
    private int coding_end;
    private java.util.List<org.ensembl.genesearch.avro.Xref> xrefs;
    private java.util.List<org.ensembl.genesearch.avro.Protein_feature> protein_features;

    /** Creates a new Builder */
    private Builder() {
      super(org.ensembl.genesearch.avro.Translation.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.ensembl.genesearch.avro.Translation.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.coding_start)) {
        this.coding_start = data().deepCopy(fields()[1].schema(), other.coding_start);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.coding_end)) {
        this.coding_end = data().deepCopy(fields()[2].schema(), other.coding_end);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.xrefs)) {
        this.xrefs = data().deepCopy(fields()[3].schema(), other.xrefs);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.protein_features)) {
        this.protein_features = data().deepCopy(fields()[4].schema(), other.protein_features);
        fieldSetFlags()[4] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Translation instance */
    private Builder(org.ensembl.genesearch.avro.Translation other) {
            super(org.ensembl.genesearch.avro.Translation.SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.coding_start)) {
        this.coding_start = data().deepCopy(fields()[1].schema(), other.coding_start);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.coding_end)) {
        this.coding_end = data().deepCopy(fields()[2].schema(), other.coding_end);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.xrefs)) {
        this.xrefs = data().deepCopy(fields()[3].schema(), other.xrefs);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.protein_features)) {
        this.protein_features = data().deepCopy(fields()[4].schema(), other.protein_features);
        fieldSetFlags()[4] = true;
      }
    }

    /** Gets the value of the 'id' field */
    public java.lang.CharSequence getId() {
      return id;
    }
    
    /** Sets the value of the 'id' field */
    public org.ensembl.genesearch.avro.Translation.Builder setId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'id' field has been set */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'id' field */
    public org.ensembl.genesearch.avro.Translation.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'coding_start' field */
    public java.lang.Integer getCodingStart() {
      return coding_start;
    }
    
    /** Sets the value of the 'coding_start' field */
    public org.ensembl.genesearch.avro.Translation.Builder setCodingStart(int value) {
      validate(fields()[1], value);
      this.coding_start = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'coding_start' field has been set */
    public boolean hasCodingStart() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'coding_start' field */
    public org.ensembl.genesearch.avro.Translation.Builder clearCodingStart() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'coding_end' field */
    public java.lang.Integer getCodingEnd() {
      return coding_end;
    }
    
    /** Sets the value of the 'coding_end' field */
    public org.ensembl.genesearch.avro.Translation.Builder setCodingEnd(int value) {
      validate(fields()[2], value);
      this.coding_end = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'coding_end' field has been set */
    public boolean hasCodingEnd() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'coding_end' field */
    public org.ensembl.genesearch.avro.Translation.Builder clearCodingEnd() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'xrefs' field */
    public java.util.List<org.ensembl.genesearch.avro.Xref> getXrefs() {
      return xrefs;
    }
    
    /** Sets the value of the 'xrefs' field */
    public org.ensembl.genesearch.avro.Translation.Builder setXrefs(java.util.List<org.ensembl.genesearch.avro.Xref> value) {
      validate(fields()[3], value);
      this.xrefs = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'xrefs' field has been set */
    public boolean hasXrefs() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'xrefs' field */
    public org.ensembl.genesearch.avro.Translation.Builder clearXrefs() {
      xrefs = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'protein_features' field */
    public java.util.List<org.ensembl.genesearch.avro.Protein_feature> getProteinFeatures() {
      return protein_features;
    }
    
    /** Sets the value of the 'protein_features' field */
    public org.ensembl.genesearch.avro.Translation.Builder setProteinFeatures(java.util.List<org.ensembl.genesearch.avro.Protein_feature> value) {
      validate(fields()[4], value);
      this.protein_features = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'protein_features' field has been set */
    public boolean hasProteinFeatures() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'protein_features' field */
    public org.ensembl.genesearch.avro.Translation.Builder clearProteinFeatures() {
      protein_features = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public Translation build() {
      try {
        Translation record = new Translation();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.coding_start = fieldSetFlags()[1] ? this.coding_start : (java.lang.Integer) defaultValue(fields()[1]);
        record.coding_end = fieldSetFlags()[2] ? this.coding_end : (java.lang.Integer) defaultValue(fields()[2]);
        record.xrefs = fieldSetFlags()[3] ? this.xrefs : (java.util.List<org.ensembl.genesearch.avro.Xref>) defaultValue(fields()[3]);
        record.protein_features = fieldSetFlags()[4] ? this.protein_features : (java.util.List<org.ensembl.genesearch.avro.Protein_feature>) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
