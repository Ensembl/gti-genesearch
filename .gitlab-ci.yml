
image: java:8-jdk

stages:
  - build
  - test
  - deploy

before_script:
  - echo `pwd`
  - echo "$CI_BUILD_NAME, $CI_BUILD_REF_NAME $CI_BUILD_STAGE"
  - export GRADLE_USER_HOME=`pwd`/.gradle

cache:
  paths:
    - .gradle/wrapper
    - .gradle/caches

build:
  stage: build
  script:
    - ./gradlew assemble
  artifacts:
    paths:
      - build/libs/*.jar
    expire_in: 1 week
  only:
    - master

test:
  stage: test
  script:
    - ./gradlew test:cleanTest test:test
    - ./gradlew search:cleanTest search:test
    - ./gradlew web:cleanTest web:compileJava -x test

deploy:
  stage: deploy
  before_script:
    - apt-get -qq update && apt-get -qq install -y python3
    - apt-get -qq install -y python python-virtualenv python-pip
    - virtualenv -p python3 .deployment
    - source ./.deployment/bin/activate
    - pip install -r requirements.txt
  script:
    - cd deployment
    - ansible-playbook deploy.xml -i environments/test
  only:
    - master
  after_script:
    - echo "Deploy complete"

deploy-stage:
  stage: deploy
  before_script:
    - apt-get -qq update && apt-get -qq install -y python3
    - apt-get -qq install -y python python-virtualenv python-pip
    - virtualenv -p python3 .deployment
    - source ./.deployment/bin/activate
    - pip install -r requirements.txt
  script:
    - cd deployment
    - ansible-playbook deploy.xml -i environments/stage
  only:
    - master
    - tags
  after_script:
    - echo "Stage deploy complete"

# TODO deploy to release ? :
# deploy-live:
#   stage: release
#   before_script:
#     - apt-get -qq update && apt-get -qq install -y python3
#     - apt-get -qq install -y python python-virtualenv python-pip
#     - virtualenv -p python3 .deployment
#     - source ./.deployment/bin/activate
#     - pip install -r requirements.txt
#   script:
#     - cd deployement
#     - ansible-playbook deploy.xml -i environments/prod
#   only:
#     - master
#     - tags
#   after_script:
#     - echo "Stage deploy complete"

after_script:
  - echo "End CI"