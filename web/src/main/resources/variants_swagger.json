{
	"/variants/query": {
		"get": {
			"summary": "Query variants",
			"description": "The variants query endpoint performs the specified query and returns the first page of results. It also supports pagination, sorting and faceting.",
			"parameters": [
				{
					"name": "query",
					"in": "query",
					"description": "Query string as JSON",
					"example": "{\"genome\":\"homo_sapiens\"}"
				},
				{
					"name": "fields",
					"in": "query",
					"description": "Fields to return in result",
					"example": "[\"id\",\"genome\",\"description\"]"
				},
				{
					"name": "offset",
					"in": "query",
					"description": "Offset start of results by",
					"example": 1
				},
				{
					"name": "limit",
					"in": "query",
					"description": "Results by page",
					"example": 10
				},
				{
					"name": "sorts",
					"in": "query",
					"description": "Fields to sort by",
					"example": "[\"genome\"]"
				},
				{
					"name": "facets",
					"in": "query",
					"description": "Fields to facet on",
					"example": "[\"genome\"]"
				},
				{
					"name": "accept",
					"in": "query",
					"description": "Media type to return",
					"example": "application/json"
				}
			],
			"tags": [
				"Query",
				"Variants"
			],
			"responses": {
				"200": {
					"description": "Query results",
					"schema": {
						"$ref": "#/definitions/QueryResult"
					}
				}
			}
		},
		"post": {
			"summary": "Query variants",
			"description": "The variants query endpoint performs the specified query and returns the first page of results. It also supports pagination, sorting and faceting.",
			"parameters": [
				{
					"name": "query",
					"in": "body",
					"description": "Specification of query, fields, facets etc. Can be supplied as URL parameters as well",
					"required": true,
					"schema": {
						"$ref": "#/definitions/QueryParams"
					}
				}
			],
			"tags": [
				"Query",
				"Variants"
			],
			"responses": {
				"200": {
					"description": "Query results",
					"schema": {
						"$ref": "#/definitions/QueryResult"
					}
				}
			}
		}
	},
	"/variants/fetch": {
		"get": {
			"summary": "Fetch variants",
			"description": "The variants fetch endpoint performs the specified query and all results. It does not support pagination, sorting or faceting.",
			"parameters": [
				{
					"name": "query",
					"in": "query",
					"description": "Query string as JSON",
					"example": "{\"genome\":\"homo_sapiens\",\"Variant_name\":\"BRCA2\"}"
				},
				{
					"name": "fields",
					"in": "query",
					"description": "Fields to return in result",
					"example": "[\"id\",\"genome\",\"description\"]"
				},
				{
					"name": "filename",
					"in": "query",
					"description": "File name to use for download",
					"example": "myvariants.json"
				},
				{
					"name": "accept",
					"in": "query",
					"description": "Media type to return",
					"example": "application/json"
				}
			],
			"tags": [
				"Fetch",
				"Variants"
			],
			"produces": [
				"application/json",
				"application/xml",
				"application/vnd.ms-excel"
			],
			"responses": {
				"200": {
					"description": "Query results",
					"schema": {
						"$ref": "#/definitions/SearchResult"
					}
				}
			}
		},
		"post": {
			"summary": "Fetch variants",
			"description": "The variants fetch endpoint performs the specified query and all results. It does not support pagination, sorting or faceting.",
			"parameters": [
				{
					"name": "query",
					"in": "body",
					"description": "Specification of query, fields, facets etc.",
					"required": true,
					"schema": {
						"$ref": "#/definitions/QueryParams"
					}
				}
			],
			"tags": [
				"Fetch",
				"Variants"
			],
			"produces": [
				"application/json",
				"application/xml",
				"application/vnd.ms-excel"
			],
			"responses": {
				"200": {
					"description": "Query results",
					"schema": {
						"$ref": "#/definitions/SearchResult"
					}
				}
			}
		}
	},
	"/variants/{id}": {
		"get": {
			"summary": "Fetch a single variant by ID",
			"description": "This endpoint returns the specified variant as a document.",
			"parameters": [
				{
					"name": "id",
					"in": "path",
					"description": "ID of variant",
					"type": "string",
					"required": true
				}
			],
			"tags": [
				"Variants"
			],
			"produces": [
				"application/json",
				"application/xml"
			],
			"responses": {
				"200": {
					"description": "Variant as nested document",
					"type": "object",
					"additionalProperties": "true"
				}
			}
		}
	},
	"/variants": {
		"post": {
			"summary": "Fetch one or more variants by ID",
			"description": "This endpoint returns the specified variants as a list of documents.",
			"parameters": [
				{
					"name": "ids",
					"in": "query",
					"description": "ID(s) of variant(s)",
					"type": "array",
					"items": {
						"type": "string"
					},
					"required": true
				}
			],
			"tags": [
				"Variants"
			],
			"produces": [
				"application/json",
				"application/xml"
			],
			"responses": {
				"200": {
					"description": "Variant(s) as array of nested document",
					"type": "array",
					"items": {
						"type": "object",
						"additionalProperties": "true"
					}
				}
			}
		}
	},
	"/variants/health": {
		"get": {
			"summary": "Variant service health",
			"description": "Find out the status of the variant search.",
			"tags": [
				"Variants",
				"Health"
			],
			"responses": {
				"200": {
					"description": "Status of service",
					"schema": {
						"$ref": "#/definitions/Health"
					}
				}
			}
		}
	},
	"/variants/info": {
		"get": {
			"summary": "Variant search info",
			"description": "Get information about the search and its fields.",
			"tags": [
				"Variants",
				"Info"
			],
			"responses": {
				"200": {
					"description": "Search description",
					"schema": {
						"$ref": "#/definitions/DataTypeInfo"
					}
				}
			}
		}
	},
	"/variants/info/fields": {
		"get": {
			"summary": "Variant search fields",
			"description": "Find which fields have",
			"tags": [
				"Variants",
				"Info"
			],
			"responses": {
				"200": {
					"description": "List of fields",
					"type": "array",
					"items": {
						"schema": {
							"$ref": "#/definitions/FieldInfo"
						}
					}
				}
			}
		}
	},
	"/variants/info/fields/{type}": {
		"get": {
			"summary": "Variant search fields",
			"description": "Find which fields of a given type are available.",
			"tags": [
				"Variants",
				"Info"
			],
			"parameters": [
				{
					"name": "type",
					"in": "path",
					"description": "Type of field to filter by",
					"example": "TEXT",
					"required": "true"
				}
			],
			"responses": {
				"200": {
					"description": "List of matching fields",
					"type": "array",
					"items": {
						"schema": {
							"$ref": "#/definitions/FieldInfo"
						}
					}
				}
			}
		}
	}
}