plugins {
    id 'org.springframework.boot' version '2.1.4.RELEASE'
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.name == 'log4j') {
            details.useTarget 'log4j:log4j:1.2.+'
        }
    }
}

apply plugin: 'io.spring.dependency-management'

repositories {
    jcenter()
}


configurations {
  compile.exclude group: "org.slf4j", module: "slf4j-log4j12"
}

dependencies {
    // explicitly force ES & Solr to avoid weird transitive behaviour
    // tag::jetty[]
    compile("org.springframework.boot:spring-boot-starter-web:2.1.4.RELEASE") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty:2.1.4.RELEASE")
    compile("org.springframework.boot:spring-boot-starter-security:2.1.4.RELEASE")
    // end::jetty[]
    // tag::actuator[]
    compile("org.springframework.boot:spring-boot-starter-actuator:2.1.4.RELEASE")
    // end::actuator[]
    // tag::jersey[]
    compile("org.springframework.boot:spring-boot-starter-jersey:2.1.4.RELEASE")
    compile("com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider")
    // end::jersey[]
    compile 'org.slf4j:slf4j-log4j12:1.7.12'

    testCompile project (':test')
    testCompile('org.springframework.boot:spring-boot-starter-test:2.1.4.RELEASE')
}
